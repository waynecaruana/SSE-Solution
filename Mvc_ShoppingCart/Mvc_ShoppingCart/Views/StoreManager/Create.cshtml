@model Common.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Create", "StoreManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Product</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

       <div class="editor-label">
            <label for="file">Upload Image</label> 
        </div>
        <div class="editor-field">
            <input type="file" name="file" id="file" style="width: 100%;" /> 
        </div>

         <div class="editor-label">
            <label for="file">Upload Zip File</label> 
        </div>
        <div class="editor-field">
            <input type="file" name="zip" id="zip" style="width: 100%;" /> 
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Stock)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Stock)
            @Html.ValidationMessageFor(model => model.Stock)
        </div>

     

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

      
         @{
    List<SelectListItem> genres = new BusinessLogic.GenreBL().GetAllGenres().Select(x => new SelectListItem()
    {
        Text = x.Name,
        Value = x.GenreID.ToString()
    }).ToList();

                <div class="editor-label">
                    @Html.Label("Genre")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.GenreID, genres, "Please Select")
                    @Html.ValidationMessageFor(model => model.Genre)
                </div>
                
            }

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
